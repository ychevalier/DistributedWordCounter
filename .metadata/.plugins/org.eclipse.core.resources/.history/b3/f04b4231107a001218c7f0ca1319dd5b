package Network;

import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.HashMap;
import java.util.Map;

import System.Config;

public class TCPServer {

	public static void main(String[] args) {
		String clientQuery;
        ServerSocket welcomeSocket;
		try {
			welcomeSocket = new ServerSocket(Config.MASTER_PORT);
			while(true) {
	            Socket connectionSocket = welcomeSocket.accept();
	            BufferedReader inFromClient = new BufferedReader(new InputStreamReader(connectionSocket.getInputStream()));
	            DataOutputStream outToClient = new DataOutputStream(connectionSocket.getOutputStream());
	            
	            HashMap<String, String> aMap = new HashMap<String,String>();
	            
	            clientQuery = inFromClient.readLine();
	            
	            if(clientQuery == null || !clientQuery.equals(Protocol.CLIENT_SEND_FILE)) {
	            	outToClient.writeBytes(Protocol.MASTER_KO + Protocol.COMMON_END_LINE);
	            } else {
		            for(;;) {
		            	clientQuery = inFromClient.readLine();
		            	if(clientQuery != null) {
		            		String[] line = clientQuery.split("\\" + Protocol.COMMON_SEPARATOR);
		            		if(line.length != 2) {
		            			// Response KO
		            			break;
		            		}
		            		aMap.put(line[0], line[1]);
		            	} else {
		            		// Let's start to read the file.
		            		break;
		            	}
		            	
		            }
		        	for(Map.Entry<String, String> e : aMap.entrySet()) {
		    			//e.getKey(); e.getValue();
		    			System.out.println(e.getKey() + " --> " + e.getValue());
		        	}
		        	
		        	outToClient.writeBytes(Protocol.MASTER_OK + Protocol.COMMON_END_LINE);
	            }
	            /*
	            do {
	            	clientQuery = inFromClient.readLine();
	            	System.out.println(clientQuery);
	            } while(!clientQuery.contains("end"));
	           
	            
	            outToClient.writeBytes("OK\n");
	            */
	            outToClient.flush();
	            outToClient.close();
	            inFromClient.close();
	        }
		} catch (IOException e) {
			e.printStackTrace();
		}

        
	}

}
